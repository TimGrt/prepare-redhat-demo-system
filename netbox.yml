---

- name: "Test NetBox modules"
  hosts: localhost
  gather_facts: false
  vars:
    workshop_slug: rh6f44
  module_defaults:
    group/netbox.netbox.netbox:
      netbox_url: https://demo.netbox.dev/
      netbox_token: a5f4a71aac44d1a6c87443a6feb7912205c42c6f
  tasks:
    - name: Create site for Workshop
      netbox.netbox.netbox_site:
        data:
          name: RH Demo environment
          slug: rh_demo_environment
          status: Active
          region: Europe

    # It is expected that all managed nodes use the same OS, therefore only gathering from one host
    - name: Get facts of all servers in web group
      ansible.builtin.setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['web'] }}"

    - name: Add OS platform
      netbox.netbox.netbox_platform:
        data:
          name: "{{ os_distributor }} {{ os_version }}"
          slug: "{{ os_distributor | lower }}_{{ os_version }}"
      vars:
        os_distributor: "{{ hostvars[groups['web'][0]]['ansible_distribution'] }}"
        os_version: "{{ hostvars[groups['web'][0]]['ansible_distribution_version'] }}"

    - name: Create tenant group
      netbox.netbox.netbox_tenant_group:
        data:
          name: CC Workshop
          slug: cc_workshop
        state: present

    - name: Create tenant for my user
      netbox.netbox.netbox_tenant:
        data:
          name: student1
          tenant_group: cc_workshop
        state: present

    - name: Create VM cluster
      netbox.netbox.netbox_cluster:
        data:
          name: Student 1 VMs
          cluster_type: Amazon Web Services
          site: rh_demo_environment
          tenant: student1

    - name: Create VM
      netbox.netbox.netbox_virtual_machine:
        data:
          name: "{{ hostvars[item]['ansible_fqdn'] }}"
          site: rh_demo_environment
          cluster: Student 1 VMs
          platform: "{{ hostvars[item]['ansible_distribution'] | lower }}_{{ hostvars[item]['ansible_distribution_version'] }}"
          vcpus: "{{ hostvars[item]['ansible_processor_vcpus'] }}"
          memory: "{{ hostvars[item]['ansible_memtotal_mb'] }}"
          disk: "{{ hostvars[item]['ansible_devices']['nvme0n1']['size'] | split(' ') | first | int }}"
          virtual_machine_role: application-server
          status: Active
        state: present
      loop: "{{ groups['web'] }}"
